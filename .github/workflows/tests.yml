name: Tests
concurrency:
  group: ${{ github.workflow }}-${{ inputs.ref || github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: true
permissions: write-all
defaults:
  run:
    shell: bash
on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: git ref to checkout and to link annotations to
        default: ""
  workflow_dispatch:

env:
  WORKFLOW_STATUS_CHECK_NAME: Tests
  DOCKER_BUILDKIT: 1
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: "true"
  DOTNET_CLI_UI_LANGUAGE: en-US
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: 1
  DOTNET_SVCUTIL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_ROLL_FORWARD: Major
  DOTNET_ROLL_FORWARD_TO_PRERELEASE: 1
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "false"
  POWERSHELL_TELEMETRY_OPTOUT: 1
  POWERSHELL_UPDATECHECK_OPTOUT: 1
  NUGET_CERT_REVOCATION_MODE: offline
  MSBUILDDISABLENODEREUSE: 1
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: git checkout / on 'workflow_call'
        if: ${{ inputs.ref != '' }}
        uses: actions/checkout@v3
        with:
          clean: false
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: git checkout / on non-'workflow_call'
        if: ${{ inputs.ref == '' }}
        uses: actions/checkout@v3
        with:
          clean: false
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Forward env variables & checkout fixes
        id: gh
        run: |
          echo "MSBUILDDISABLENODEREUSE=1" >> .env
          env | grep -E '^(GITHUB_|CI)' | grep -E GITHUB_SHA= --invert-match | grep -E GITHUB_REF= --invert-match >> $GITHUB_ENV
          env | grep -E '^(GITHUB_|CI)' | grep -E GITHUB_SHA= --invert-match | grep -E GITHUB_REF= --invert-match >> .env
          sha=$(git rev-parse HEAD)
          echo "GITHUB_SHA=$sha" >> $GITHUB_ENV
          echo "GITHUB_SHA=$sha" >> .env
          branch=$(git rev-parse --abbrev-ref HEAD)
          echo "GITHUB_REF=refs/heads/$branch" >> $GITHUB_ENV
          echo "GITHUB_REF=refs/heads/$branch" >> .env
          echo -e "\033[38;5;99;5;16msha: $sha\033[0m"
          echo -e "\033[38;5;99;5;16mbranch: $branch\033[0m"
          echo -e "\033[38;5;99;5;16minputs.ref: ${{ inputs.ref }}\033[0m"
          echo "::set-output name=sha::$sha"
          echo "::set-output name=branch::$branch"
          echo "::add-matcher::./.github/csc.json"

      # we can use [`IGNORE_GITHUB_REF: true`](https://github.com/dotnet/nbgv/issues/50) with default dotnet/nbgv@master
      # after 3.6 nbgv release and the gh runner will have it
      - name: Generate version
        id: nbgv
        uses: actions/github-script@v6
        with:
          script: |
            const path = require('path');
            const os = require('os');
            process.env.GITHUB_REF='refs/heads/${{ steps.gh.outputs.branch }}';
            process.env.GITHUB_SHA='${{ steps.gh.outputs.sha }}';
            try {
              // install nbgv isn' required
              // the image includes nbgv [actions/runner-images](https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md#net-tools)

              // collect a JSON string of all the version properties.
              let versionJson = '';
              await exec.exec('nbgv', ['get-version', '-f', 'json'], { listeners: { stdout: (data) => { versionJson += data.toString() } } });
              core.setOutput('versionJson', versionJson);

              // break up the JSON into individual outputs.
              const versionProperties = JSON.parse(versionJson);
              for (let name in versionProperties.CloudBuildAllVars) {
                // Trim off the leading NBGV_
                core.setOutput(name.substring(5), versionProperties.CloudBuildAllVars[name]);
              }

              await exec.exec('nbgv', ['cloud', '-a']);
            }
            catch (error) {
              core.setFailed(error.message);
            }

      - name: Set status check - pending
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: false
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "pending",
              sha: "${{ steps.gh.outputs.sha }}",
              context: process.env.WORKFLOW_STATUS_CHECK_NAME ,
              description: "Waiting for '${{ github.workflow }}' workflow completion",
              target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            });

      - name: NuGet cache restore
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: dotnet build
        id: build
        uses: vchirikov/.github/shell-and-report-action@master
        with:
          commands: |-
            dotnet build --nologo -c Debug -p:GenerateFullPaths=true /clp:NoSummary | sed -E 's/^(.*?)(error [A-Z0-9]{3,}:)(.*)$/- \1\2\3/g'
          report-start: |-
            :gear: Run unit-tests... `༼ つ ◕_◕ ༽つ`
          report-failure: |-
            ❌ Build failed  `(╯°□°)╯︵ ┻━┻`

            <details open> <summary> dotnet build output </summary>

            ```diff
            {0}
            ```

            </details>

      - name: dotnet test
        id: tests
        uses: vchirikov/.github/shell-action@master
        with:
          commands: |-
            dotnet test --nologo --no-build --filter 'FullyQualifiedName~UnitTests' --blame-hang --blame-hang-timeout 60s --logger:"github;name=unit-tests;GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }};GITHUB_SHA=${{ steps.gh.outputs.sha }}" | sed -E 's/^([[:space:]]+Failed [a-z_A-Z0-9]{3,})(.*)$/- \1\2/g' | sed -E 's/^([[:space:]]+Passed [a-z_A-Z0-9]{3,})(.*)$/+ \1\2/g'

      - name: Report tests success
        if: ${{ steps.tests.outcome == 'success' }}
        uses: mshick/add-pr-comment@07f690343c25a94e24a8acb70d03c86b701ae322
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: true
          message: |
            ✅ Running unit tests on `${{ steps.nbgv.outputs.SemVer2 }}` version was successful!

            ${{ fromJSON(steps.tests.outputs.dynamic).summary }}

            `(•_•)          ( •_•)>⌐■-■          (⌐■_■)`

      - name: Report tests failed
        if: ${{ failure() && steps.tests.outcome == 'failure' }}
        uses: mshick/add-pr-comment@07f690343c25a94e24a8acb70d03c86b701ae322
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: true
          message: |
            ❌ Tests failed. `(╯°□°)╯︵ ┻━┻`

            ${{ fromJSON(steps.tests.outputs.dynamic).summary }}

            <details open> <summary> Tests output </summary>

            ```diff
            ${{ steps.tests.outputs.out }}
            ```

            </details>

      - name: Report cancellation
        if: ${{ cancelled() }}
        uses: mshick/add-pr-comment@07f690343c25a94e24a8acb70d03c86b701ae322
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: true
          message: |
            ⚠️ Cancelled. `(ง •_•)ง`

      - name: Report failure
        if: ${{ failure() && steps.tests.outcome != 'failure' && steps.build.outcome != 'failure'}}
        uses: mshick/add-pr-comment@07f690343c25a94e24a8acb70d03c86b701ae322
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ❌ Failed. `( ˘︹˘ )`

      - name: Set status check - success / failure / error
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: false
          script: |
            const status = "${{ job.status }}";
            const state = status === 'cancelled' ? 'error' : status;

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: state,
              sha: "${{ steps.gh.outputs.sha }}",
              context: process.env.WORKFLOW_STATUS_CHECK_NAME ,
              description: "",
              target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            });
